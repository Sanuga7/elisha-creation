/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.elisha.panel;

import com.elisha.database.Database;
import com.elisha.loggers.Loggers;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Vector;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Sanuga
 */
public class Reports extends javax.swing.JPanel {

    /**
     * Creates new form Reports
     */
    
    private JTable jTable;
    private JTable jTable1;
    private static final String cls = Reports.class.getName();
    private int month;
    
    public Reports() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    private String getMonthName(int month) {
        switch (month) {
            case 1:  return "January";
            case 2:  return "February";
            case 3:  return "March";
            case 4:  return "April";
            case 5:  return "May";
            case 6:  return "June";
            case 7:  return "July";
            case 8:  return "August";
            case 9:  return "September";
            case 10: return "October";
            case 11: return "November";
            case 12: return "December";
            default: return "Invalid month";
        }
}
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        lsrBtn = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        mirBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI Light", 0, 24)); // NOI18N
        jLabel1.setText("Reports");

        jLabel2.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel2.setText("Low Stock Report");

        lsrBtn.setText("View");
        lsrBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lsrBtnActionPerformed(evt);
            }
        });

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel3.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel3.setText("Monthly Income Report");

        mirBtn.setText("View");
        mirBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mirBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lsrBtn))
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(80, 80, 80)
                                .addComponent(mirBtn))
                            .addComponent(jSeparator4))
                        .addGap(33, 33, 33))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lsrBtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(mirBtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(271, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void lsrBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lsrBtnActionPerformed
        // TODO add your handling code here:
        jTable = new JTable();
        jTable.setVisible(false);
        try(Connection conn = Database.createConnection()){
          if(conn != null){
                String query = "SELECT * FROM `stock` INNER JOIN `stock_has_variation` ON stock.id=stock_has_variation.stock_id INNER JOIN `variation` ON stock_has_variation.variation_id = variation.id INNER JOIN `stock_has_product` ON stock.id=stock_has_product.stock_id INNER JOIN `product` ON `stock_has_product`.product_id=product.id INNER JOIN supplier ON stock_has_variation.supplier_id = supplier.id WHERE `quantity` < ?";
        
                Vector<String> headers = new Vector<>();
                headers.add("COLUMN_0");
                headers.add("COLUMN_1");
                headers.add("COLUMN_2");
                headers.add("COLUMN_3");

                Vector<Vector> data = new Vector<>();
                
                try(PreparedStatement stmt = conn.prepareStatement(query)){
                   stmt.setInt(1, 3);
                    ResultSet rs = stmt.executeQuery();
                    while(rs.next()){
                       Vector<String> row = new Vector();  
                       row.add(rs.getString("stock_id"));
                       row.add(rs.getString("title"));
                       row.add(rs.getString("quantity"));
                       row.add(rs.getString("name"));
                       data.add(row);
                    }
                    
                    DefaultTableModel dtm = new DefaultTableModel(data, headers);
                    jTable.setModel(dtm);
                    
                    try {
                        InputStream filePath = getClass()
                            .getClassLoader()
                            .getResourceAsStream("com/elisha/report/report_with_table_data.jasper");

                        HashMap<String, Object> parameters = new HashMap<>();

                        JRTableModelDataSource jrTableModelDataSource = new JRTableModelDataSource(jTable.getModel());

                        JasperPrint fillReport = JasperFillManager.fillReport(filePath, parameters, jrTableModelDataSource);

                        JasperViewer.viewReport(fillReport, false);

                        //JasperExportManager.exportReportToHtmlFile(fillReport, "report.html");
                        JasperExportManager.exportReportToPdfFile(fillReport, "report.pdf");

                    } catch (JRException e) {
                        e.printStackTrace();
                    }
                            }
                      }
                    }catch(SQLException e){
                           Loggers.logInfo("Failed to load product data: " + e.getMessage(), cls);
                    }
        
    }//GEN-LAST:event_lsrBtnActionPerformed

    private void mirBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mirBtnActionPerformed
        // TODO add your handling code here:
        jTable1 = new JTable();
        jTable1.setVisible(false);
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
        LocalDateTime time = LocalDateTime.now();
        String now = dtf.format(time);
        String[] p = now.split(" ");
        String[] d = p[0].split("-");
        month = Integer.parseInt(d[1]);
        
        String[] coulmn = {"ID","Month","No.of Sales","Income"};
        Vector<String> headers = new Vector(Arrays.asList(coulmn));
        Vector<Vector> data= new Vector<>();
        
        for (int i = 1; i < 6; i++) {
            String query = "SELECT * FROM `invoice` WHERE `time` LIKE ? ";
            try(Connection conn = Database.createConnection()){
                if(conn != null){
                   try(PreparedStatement stmt = conn.prepareStatement(query)){
                       String monthStr = (month < 10 ? "0" : "") + month;
                       String value = "%" + d[0] + "-" + monthStr + "%";
                       stmt.setString(1, value);
                       ResultSet rs = stmt.executeQuery();
                       Vector<String> row = new Vector<>();
                       int total = 0;
                       int times = 0;
                       while(rs.next()){
                          total = total+rs.getInt("price");
                          times = times + 1;
                       }
                       row.add(String.valueOf(i));
                       String monthName = getMonthName(month);
                       row.add(monthName);
                       row.add(String.valueOf(times));
                       row.add(String.valueOf(total));
                       total = 0;
                       times = 0;
                       
                       data.add(row);
                       
                       DefaultTableModel  dtm = new DefaultTableModel(data, headers);
                       jTable1.setModel(dtm);
                       
                   }
                }
            } catch (Exception e) {
            }
            month = month-1;
        }
        try {
            InputStream filePath = getClass()
                    .getClassLoader()
                    .getResourceAsStream("com/elisha/report/report_with_table.jasper");

            HashMap<String, Object> parameters = new HashMap<>();

            JRTableModelDataSource jrTableModelDataSource = new JRTableModelDataSource(jTable1.getModel());

            JasperPrint fillReport = JasperFillManager.fillReport(filePath, parameters, jrTableModelDataSource);

            JasperViewer.viewReport(fillReport, false);

            //JasperExportManager.exportReportToHtmlFile(fillReport, "report.html");
            JasperExportManager.exportReportToPdfFile(fillReport, "report.pdf");

        } catch (JRException e) {
           e.printStackTrace();
        }
    }//GEN-LAST:event_mirBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JButton lsrBtn;
    private javax.swing.JButton mirBtn;
    // End of variables declaration//GEN-END:variables
}
